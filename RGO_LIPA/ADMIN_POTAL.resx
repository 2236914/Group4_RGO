<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>